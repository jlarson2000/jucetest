
Mobius::getSampleRate
  what actually cares about this?
  a few things wanted this to put into an Audio before saving the file,
  that can be added much higher
  a few things need it to do tempo calculations
  
SystemConstant
  standardize on using Instances as the vector, find() as the search
  function, and trace() as the dump function
  

Mobius::getState
  - don't need to be returning OverlayBindings?  Well I guess a script
    could have changed them

Mobius::getReportedLatency, getEffectiveInputLatency
  who uses this?

Mobius::setCustomMode
  vaguely remember this, scripts can invent their own modes and want the UI
  to display them

Mobius::internTarget
  removed resolutions for BindingConfig, I changed the name and we shouldn't
  be doing this down here

Mobius::isNoExternalInput etc.
  seems to be a testing hack when running in a context that has no audio coming in
  see Variable, says it's for the unit tests to suppress audio noise when it is injecting
  audio from a Sample

  
Stream::capture
  writes Audio to file


Trigger etc.

Git MidiListener drug in for something, revisit everything that
thinks about Midi

Lost LoopSummary along the way

MobiusConfig::setActiveSetup
  - same for other "active" indicators
  model currently identifies these by name which means a string copy
  core needs to call this in response to actions and scripts
  anything that can be set in core needs to stop using names and use
  numbers instead, same for MobiusState


Project::readAudio
  files


ProjectLayer::ProjectLayer
  calls Audio::copy which would to MASSIVE memory allocation
  we're going to have to rethink about how save/load works in general,
  Can't have the interrupt handler doing memory, though since projects are rare
  glitches during save/load aren't that bad, still what does it
  mean to save a project when you have a live loop running?

  could have the shell put the core in some sort of suspended state then
  carefully touch the internal structures in the UI thread

  that's really the way this has to work, save/load/project must live entirely
  in the shell thread, move it out of core to reinforce this
  
